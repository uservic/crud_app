<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <context:component-scan base-package="com.andersen.javatrainee.service"/>

    <!--Properties files are accessible to Spring via-->
    <context:property-placeholder location="classpath:db/DB.properties"/>

    <!--Heroku-->
    <!--<bean class="java.net.URI" id="dbUrl">-->
        <!--<constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>-->
    <!--</bean>-->

    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">-->
        <!--<property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() + '?sslmode=require' }"/>-->
        <!--<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>-->
        <!--<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>-->
    <!--</bean>-->

    <!--Using scripts to initialize DB-->
    <jdbc:initialize-database enabled="${database.init}">
        <jdbc:script location="classpath:db/${jdbc.initLocation}"/>
        <jdbc:script location="classpath:db/${jdbc.populateDB}"/>
    </jdbc:initialize-database>

    <bean name="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${database.jdbcdriver}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>

    <!-- Default configuration for Hibernate -->
    <bean id="hibernateJpaVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <!-- Configure the entity manager factory bean -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <!-- Set base package for entities -->
        <property name="packagesToScan" value="com.andersen.javatrainee.model"/>
        <!-- Set JPA properties -->
        <property name="jpaProperties">
            <props>
                    <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                    <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                    <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            </props>
        </property>
    </bean>

    <!-- Configure the transaction manager bean -->
    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven/>
    <jpa:repositories base-package="com.andersen.javatrainee.repository"/>
    <context:component-scan base-package="com.andersen.**.repository"/>

</beans>